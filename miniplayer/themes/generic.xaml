<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:miniplayer.ui.controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="options">

    <ControlTemplate x:Key="BaseWindowTemplate" TargetType="{x:Type ctrl:BaseWindow}">
        <ControlTemplate.Resources>
            <!--https://learn.microsoft.com/en-us/answers/questions/652068/mouse-resizing-cursor-changes-to-normal-in-wpf.html-->
            <Style x:Key="ResizeGripStyle" TargetType="Rectangle">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Fill" Value="Transparent" />
                <Setter Property="Width" Value="4" />
                <Setter Property="Cursor" Value="SizeWE" />
                <!--<EventSetter Event="MouseLeftButtonDown" Handler="Resize_Init"/>
                <EventSetter Event="MouseLeftButtonUp" Handler="Resize_End"/>
                <EventSetter Event="MouseMove" Handler="Resizing_Window"/>-->
            </Style>
        </ControlTemplate.Resources>
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <ctrl:PathButton x:Name="PART_closeBtn" 
                                 Grid.ColumnSpan="3" 
                                 PathData="{DynamicResource geo_close}" 
                                 Style="{DynamicResource buttonStyle}"
                                 Width="10"
                                 Height="10" 
                                 Margin="0,4,4,0"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right"/>

                <Rectangle x:Name="PART_leftSizeGrip" Style="{StaticResource ResizeGripStyle}"  HorizontalAlignment="Left"/>
                <Rectangle x:Name="PART_rightSizeGrip" Style="{StaticResource ResizeGripStyle}" HorizontalAlignment="Right"/>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type ctrl:BaseWindow}" TargetType="{x:Type ctrl:BaseWindow}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource WindowBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}"/>
        <Setter Property="Template" Value="{StaticResource BaseWindowTemplate}"/>
    </Style>

    <!-- FocusVisual -->

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#60000000"
                     StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PathButton -->
    <SolidColorBrush x:Key="PathButtonFillBrush" Color="#4d4d4d" options:Freeze="True"/>
    <SolidColorBrush x:Key="PathButtonFillBrush_MouseOver" Color="#4d4d4d" options:Freeze="True"/>
    <SolidColorBrush x:Key="PathButtonFillBrush_Pressed" Color="#4d4d4d" options:Freeze="True"/>
    <SolidColorBrush x:Key="PathButtonFillBrush_Disabled" Color="#4d4d4d" options:Freeze="True"/>

    <Style TargetType="ctrl:PathButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:PathButton">
                    <Border Background="{TemplateBinding Background}">
                        <Viewbox Margin="{TemplateBinding Padding}">
                            <Path x:Name="_path" Data="{TemplateBinding PathData}" 
                                  Fill="{DynamicResource PathButtonFillBrush}" 
                                  Stroke="Transparent" StrokeThickness="0">
                                <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="_path" Storyboard.TargetProperty="(Path.Fill)">
                                                <EasingColorKeyFrame KeyTime="0" Value="red" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource PathButtonFillBrush_Pressed}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource PathButtonFillBrush_Disabled}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                            </Path>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_path" Property="Fill" Value="{DynamicResource PathButtonFillBrush_MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="_path" Property="Fill" Value="{DynamicResource PathButtonFillBrush_Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="_path" Property="Fill" Value="{DynamicResource PathButtonFillBrush_Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>